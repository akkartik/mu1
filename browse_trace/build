#!/bin/sh
# For details on the basic form of this script, see https://notabug.org/akkartik/basic-build.

set -e  # stop immediately on error

# Some environment variables that can be passed in. For example, to turn off
# optimization:
#   $ CFLAGS=-g ./build2
test "$CXX" || export CXX=c++
test "$CC" || export CC=cc
test "$CFLAGS" || export CFLAGS="-g -O2"
export CFLAGS="$CFLAGS -Wall -Wextra -ftrapv -fno-strict-aliasing"

# there's two mechanisms for fast builds here:
# - if a command is quick to run, always run it but update the result only on any change
# - otherwise run it only if the output is 'older_than' the inputs
#
# avoid combining both mechanisms for a single file
# otherwise you'll see spurious messages about files being updated
# risk: a file may unnecessarily update without changes, causing unnecessary work downstream

# return 1 if $1 is older than _any_ of the remaining args
older_than() {
  local target=$1
  shift
  if [ ! -e $target ]
  then
#?     echo "$target doesn't exist"
    echo "updating $target" >&2
    return 0  # success
  fi
  local f
  for f in $*
  do
    if [ $f -nt $target ]
    then
      echo "updating $target" >&2
      return 0  # success
    fi
  done
  return 1  # failure
}

# redirect to $1, unless it's already identical
update() {
  if [ ! -e $1 ]
  then
    cat > $1
  else
    cat > $1.tmp
    diff -q $1 $1.tmp >/dev/null  &&  rm $1.tmp  ||  mv $1.tmp $1
  fi
}

noisy_cd() {
  cd $1
  echo "-- `pwd`" >&2
}

older_than browse_trace_bin browse_trace.cc *_list ../termbox/*  &&  {
  # missing some deps here
  noisy_cd ../termbox
    older_than ../termbox/libtermbox.a ../termbox/*.c  &&  {
      older_than utf8.o utf8.c && {
        $CC $CFLAGS -c utf8.c
      }
      older_than termbox.o termbox.c termbox.h input.inl output.inl bytebuffer.inl && {
        $CC $CFLAGS -c termbox.c
      }
      older_than libtermbox.a *.o && {
        ar rcs libtermbox.a *.o
      }
    }
  noisy_cd ../browse_trace

  grep -h "^[^[:space:]#].*) {$" browse_trace.cc  |grep -v ":.*("  |sed 's/ {.*/;/'  |update function_list
  # auto-generate list of tests to run
  grep -h "^\s*void test_" browse_trace.cc  |sed 's/^\s*void \(.*\)() {.*/\1,/'  |update test_list
  grep -h "^\s*void test_" browse_trace.cc  |sed 's/^\s*void \(.*\)() {.*/"\1",/'  |update test_name_list
  $CXX $CFLAGS browse_trace.cc ../termbox/libtermbox.a -o browse_trace_bin
}

exit 0
